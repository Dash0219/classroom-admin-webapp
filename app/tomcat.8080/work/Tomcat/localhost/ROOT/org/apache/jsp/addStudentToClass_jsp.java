/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2023-03-30 08:12:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.lang.Object;
import app.model.*;

public final class addStudentToClass_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("app.model");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.lang.Object");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title>School Administration App</title>\n");
      out.write("    </head>\n");
      out.write("    <body>  \n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("        <div class=\"main\">\n");
      out.write("            ");
String className = (String) request.getParameter("name");
      out.write("\n");
      out.write("            <a href=\"viewStudentListOfClass.jsp?name=");
      out.print(className);
      out.write("\">Back</a>\n");
      out.write("            <h2>Add students to ");
      out.print(className);
      out.write("</h2>\n");
      out.write("  \n");
      out.write("  <form method=\"POST\" action=\"/filterStudent.html\">\n");
      out.write("      <div>\n");
      out.write("          <a>Search for:</a>\n");
      out.write("          <select name=\"type\" required>\n");
      out.write("              <option value=\"\" disabled selected>--select option--</option>\n");
      out.write("              <option value=\"firstName\">First Name</option>\n");
      out.write("              <option value=\"lastName\">Last Name</option>\n");
      out.write("              <option value=\"studentAge\">Age</option>\n");
      out.write("              <option value=\"studentGender\">Gender</option>\n");
      out.write("              <option value=\"studentID\">Student ID</option>\n");
      out.write("              <option value=\"studentClass\">Class</option>\n");
      out.write("              <option value=\"studentImageURL\">Image URL</option>\n");
      out.write("            </select>\n");
      out.write("        </div>\n");
      out.write("        <div>\n");
      out.write("            <input type=\"text\" name=\"keyword\" placeholder=\"Enter search keyword here\" required/>\n");
      out.write("            <input type=\"hidden\" name=\"action\" value=\"searchStudentWhenAddingToClass\" required/>\n");
      out.write("            <input type=\"hidden\" name=\"className\" value=");
      out.print(className);
      out.write(" required/>\n");
      out.write("            <input type=\"submit\" value=\"Search\"/>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("    ");

    
    ArrayList<Student> display = new ArrayList<>();
        for (Classs c : Data.classes){
            if (c.getClassName().compareTo(className) != 0){
                display.addAll(c.getMembers());
            }
        }
            
    if (request.getAttribute("viewFilteredList") != null){
        display = (ArrayList<Student>) request.getAttribute("filteredList");
    }
    if (display != null) { 
        for (Student student : display) {
            
      out.write("\n");
      out.write("            <hr>\n");
      out.write("            <div>\n");
      out.write("                <a>");
      out.print(student.getFirstName() + " " + student.getLastName());
      out.write("</a>\n");
      out.write("                ");
 
                String url = student.getStudentImageURL();
                if (url.compareTo("null") == 0) { 
                url = "/assets/noImageAvailable.jpg";
                } 
      out.write("\n");
      out.write("                <img src=\"");
      out.print(url);
      out.write("\" style=\"max-width: 215px;\" height=\"215\" align=\"right\">\n");
      out.write("            </div>\n");
      out.write("    <ul>\n");
      out.write("        <div>\n");
      out.write("            <a>");
      out.print("Age: " + student.getStudentAge());
      out.write("</a>\n");
      out.write("        </div>\n");
      out.write("        <div>\n");
      out.write("            <a>");
      out.print("Gender: " + student.getStudentGender());
      out.write("</a>\n");
      out.write("        </div>\n");
      out.write("        <div>\n");
      out.write("            <a>");
      out.print("Student ID: " + student.getStudentID());
      out.write("</a>\n");
      out.write("        </div>\n");
      out.write("        <div>\n");
      out.write("            ");
String thisStudentClassName = student.getStudentClass();
      out.write("\n");
      out.write("            <a>");
      out.print("Class: " + thisStudentClassName);
      out.write("</a>\n");
      out.write("        </div>\n");
      out.write("        <br>\n");
      out.write("        <br>\n");
      out.write("\n");
      out.write("        <div>\n");
      out.write("            <a href=\"addStudentToClassResult.jsp?id=");
      out.print( student.getStudentID());
      out.write("&name=");
      out.print(className);
      out.write("&originalName=");
      out.print(thisStudentClassName);
      out.write("\">Add to this class</a>\n");
      out.write("        </div>\n");
      out.write("        </ul>\n");
      out.write("        ");
 } 
    } else {
    
      out.write("\n");
      out.write("        <p>There are no students to show</p>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    <hr>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
